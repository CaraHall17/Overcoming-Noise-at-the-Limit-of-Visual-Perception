globals [
  min-value-E ;minimum errors, for stars ungraded bipolar only, see setup and "Stars - Number of Erros" plot code for more
  min-value-P
  x-counter
  receptive-field
  number-of-stars
]

turtles-own
[
  ;universal variables
  center-rods ; turtles on the same patch - represents center receptive field
  surround-rods ; turtles on neighboring patches - represents surround receptive field
  vesicle-sum ; sum of all vesicles released in last three (length of lists) ticks
  synapse-strength ; difference between the absolute value number of vesicles released in past three (length of lists) ticks, represents activation of bipolar neuron after lateral inhibition
  surround-center-ratio ; factor that normalizes the center activation / inhibition to the surround activation / inhibition
  center-radius
  surround-radius
  index-position ; to iterate through lists

  ;poisson model variables
  unitary-vesicle-history ; list containing number of unitary vesicle events in the last three (length of list) ticks
  poisson-multiplier ; hard coded as 1 (when vesicle release is not suppressed by photon) and 0.25 (when vesicle release is supressed by photons)

  ;erlang model variables
  multivesicle-history ; list containing number of multivesicle events in the last three (length of list) ticks
  erlang-counter ; counts poisson events that add up to erlang factor which causes multivesicle release
  erlang-poisson-spontaneous-release-rate ; the mean for the poisson events that lead to multivesicular release
  erlang-factor ;the sum the poisson events must reach to trigger multivesicular event
  multivesicular-number ;the number of vesicles released per multivesicular event, currently set as half basal vesicle release to keep number of vesicles released equal always

]

to setup
  ca
  set x-counter 0 ; used for plotting to reset x value after reseting plots during a run
  ifelse image = "stars"
  [
    set number-of-stars 40
    ask patches [set pcolor black]
    ask n-of number-of-stars patches [set pcolor white]
  ]
  [import-pcolors file-path]

  ask patches
  [
    set receptive-field 5
    sprout receptive-field
  ]

  ask turtles
  [
    set color black
    set size 1.4
    set shape "square"
    set unitary-vesicle-history [0 0 0] ;each tick and index of list is 1/3 second, allows for ~ 1/3 second inhibition (Campbell and Westheimer, 1960), and 1 second "memory" of bipolar cells (Denny and Gaines, 2000)
    set multivesicle-history [0 0 0]
    set erlang-factor 620 ; 100 *  erlang factor (Hays et al., 2021), allows for more place values in random poisson
    set multivesicular-number basal-vesicle-release-per-second / 2 ; coded to be two per second, (Hays et al., 2021)
    set erlang-counter random (erlang-factor + 1) ; turtles in erlang model start at random point in count up to erlang factor
    set center-radius 0
    set surround-radius 1
    set center-rods turtles in-radius 0
    set surround-rods turtles in-radius 1 who-are-not turtles in-radius 0
    set min-value-E (max-pycor * max-pxcor * receptive-field) ; for stars setting only, minimum error for plotting and optimizing AP threshold
    set min-value-P (max-pycor * max-pxcor * receptive-field)
    set erlang-poisson-spontaneous-release-rate (2 * erlang-factor / length unitary-vesicle-history) ;coded to match basal release rate of unitary vesicles in poisson model for comparison (Hays et al., 2021)
    set poisson-multiplier 1
    set surround-center-ratio (count turtles in-radius surround-radius who-are-not turtles in-radius center-radius / count turtles in-radius center-radius) ; see above
  ]
  if image = "stars" [ ask turtles [set size 1.1]] ; smaller turtles make it easier to see actual stars behind
  reset-ticks
end


to go
  ask turtles [set index-position (ticks) mod length unitary-vesicle-history]
  ifelse cells = "none" [ask turtles [set color pcolor]] ; shows users the background image behind cells
  [
    ifelse model = "erlang"
    [
      ;line below resets minimum error if it has decreased
      if count turtles with [color = pink AND pcolor = black] + count turtles with [color = black AND pcolor = white]  < min-value-E [ set min-value-E count turtles with [color = pink AND pcolor = black] + count turtles with [color = black AND pcolor = white]]
      ask turtles
      [
        set erlang-counter erlang-counter + random-poisson erlang-poisson-spontaneous-release-rate ;poisson event that adds to erlang event
        ifelse erlang-counter >= erlang-factor ; erlang event
        [
          set multivesicle-history replace-item index-position multivesicle-history multivesicular-number ;adds to multivesicular release history
          set erlang-counter erlang-counter - erlang-factor ;leaves remaining "leftover" events
        ]
        [set multivesicle-history replace-item index-position multivesicle-history 0] ;replaces index with 0 if no erlang event, this is unlike Poisson model where mean poisson variable is decreased to 25% based on membrane potential of rods (Hays et al., 2021)
        ifelse pcolor * random-poisson (photons-per-second / length unitary-vesicle-history) >= 5 ;poisson event that determines if photon hits rod and is absorbed, normalized to make brighter colors have higher mean release rates 5 is the netlogo value between black and white

        [set erlang-poisson-spontaneous-release-rate 0] ; inhibits poisson event during next tick
        [set erlang-poisson-spontaneous-release-rate 2 * erlang-factor / length unitary-vesicle-history] ; resets poisson release rate after inhibition

        ifelse cells = "rods only" [set color (9.9 - (item index-position multivesicle-history) * arbitrary-gradient-enhancer)] ;reflects instantaneous number of vesicle released, but opposite so that lowest number is brightest
        [
          set vesicle-sum sum multivesicle-history ; when bipolar cells shown, vesicles released in bipolar cell's "memory"
          set synapse-strength abs((surround-center-ratio * sum [vesicle-sum] of center-rods) - sum [vesicle-sum] of surround-rods) ;the the sums on center rods are normalized against surround rods (increasing weight of center rods) (Dacey et al., 2000) and the difference between the sums is the synapse strength
          ifelse cells = "bipolar cells only"
          ;graded bipolar is the most accurate representation of bipolar cell activity, but the using the potential threshold in the ungraded bipolar mode is useful for visualizing only bipolar cells which are firing above a certain rate
          [ifelse graded-bipolar? = True [set color 139.9 - (synapse-strength * arbitrary-gradient-enhancer)] [ifelse synapse-strength > potential-threshold [set color pink][set color black]]]
          [
            set color (9.9 - (item index-position multivesicle-history) * arbitrary-gradient-enhancer)
            ifelse graded-bipolar? = True [set color 139.9 - (synapse-strength  * arbitrary-gradient-enhancer)] [if synapse-strength > potential-threshold [set color pink]]
          ]
    ]]]

    [
      ;line below resets minimum error if it has decreased
      if count turtles with [color = pink AND pcolor = black] + count turtles with [color = black AND pcolor = white]  < min-value-P [ set min-value-P count turtles with [color = pink AND pcolor = black] + count turtles with [color = black AND pcolor = white]]
      ask turtles
      [
        set unitary-vesicle-history replace-item index-position unitary-vesicle-history random-poisson (basal-vesicle-release-per-second * poisson-multiplier / length unitary-vesicle-history) ;unitary vesicle release amount added to history
        ifelse pcolor * random-poisson (photons-per-second / length unitary-vesicle-history) >= 5 [set poisson-multiplier 0.25][set poisson-multiplier 1] ;when inhibited, mean poisson rate is decreased to 25% (Hays et al., 2021) 5 is the netlogo value between black and white


        ifelse cells = "rods only"
        [set color (9.9 - (item index-position unitary-vesicle-history * arbitrary-gradient-enhancer)) ]  ;reflects instantaneous number of vesicle released, but opposite so that lowest number is brightest
        [
          set vesicle-sum sum unitary-vesicle-history
          set synapse-strength abs((surround-center-ratio * sum [vesicle-sum] of center-rods) - sum [vesicle-sum] of surround-rods) ;the the sums on center rods are normalized against surround rods (increasing weight of center rods) (Dacey et al., 2000) and the difference between the sums is the synapse strength

          ifelse cells = "bipolar cells only"
          ;graded bipolar is the most accurate representation of bipolar cell activity, but the using the potential threshold in the ungraded bipolar mode is useful for visualizing only bipolar cells which are firing above a certain rate
          [ifelse graded-bipolar? = True [set color 139.9 - (synapse-strength * arbitrary-gradient-enhancer) ] [ifelse synapse-strength > potential-threshold [set color pink][set color black]]]

          [
            set color (9.9 - (item index-position unitary-vesicle-history * arbitrary-gradient-enhancer))
            ifelse graded-bipolar? = True [set color 139.9 - (synapse-strength * arbitrary-gradient-enhancer)] [if synapse-strength > potential-threshold [set color pink]]
          ]
  ]]]]

  if min-value-P > 0 [output-show min-value-E / min-value-P]
tick
end



to clear-plots
  clear-all-plots
  if model = "erlang" [set min-value-E (max-pycor * max-pxcor)] ; minimum error of current model only reset, allows for comparison after reseting the plots to omit transition values from scale, see plot code
  if model = "poisson" [set min-value-P (max-pycor * max-pxcor)]
  set x-counter (ticks) ;see plot code
  clear-output
end
